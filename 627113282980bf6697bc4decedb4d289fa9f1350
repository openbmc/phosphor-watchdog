{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06bea7a4_7d912789",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-30T07:18:26Z",
      "side": 1,
      "message": "\u003e Patch Set 7:\n\u003e \n\u003e (1 comment)\n\u003e \n\u003e \u003e Patch Set 7:\n\u003e \u003e \n\u003e \u003e This one (https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-health-monitor/+/42144/2/healthMonitor.cpp#531) ... used the sdbusplus::asio::sd_event_wrapper once.\n\u003e \n\u003e oh, maybe I should try that instead to see maybe that\u0027s cleaner.\n\nTried it out and it seems like it still leaks memory or just too much memory usage in general. I have removed the sdevent and its timer to use a standalone timer instead. Seems to be doing fine for now.",
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c9b8b9f_f3eced22",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-03T17:39:08Z",
      "side": 1,
      "message": "Prefer io_context (which is the same typedef internally) for new code to match with the std proposals.",
      "range": {
        "startLine": 20,
        "startChar": 21,
        "endLine": 20,
        "endChar": 31
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c190705b_2f290735",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T04:16:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c9b8b9f_f3eced22",
      "range": {
        "startLine": 20,
        "startChar": 21,
        "endLine": 20,
        "endChar": 31
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df30925d_1141c5a0",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-03T17:39:08Z",
      "side": 1,
      "message": "given the whole point of this patch is to remove sd_event, I don\u0027t think this is needed?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39016514_2cc3c981",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T04:16:26Z",
      "side": 1,
      "message": "oh yeah, thanks. I was testing ASIO wrapper for sdevent to see if it is better. (it was not).",
      "parentUuid": "df30925d_1141c5a0",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bf08e46_9b4b5803",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-03T17:39:08Z",
      "side": 1,
      "message": "Why are you using the base class directly now?",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a0cf02a_16151f41",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T04:16:26Z",
      "side": 1,
      "message": "Need it for convertActionFromString.",
      "parentUuid": "2bf08e46_9b4b5803",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd97533a_53242dc5",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-05T19:07:26Z",
      "side": 1,
      "message": "convertActionFromString is available in the Watchdog object namespace, and was used previously there, so I still don\u0027t understand why you need to go directly to the base class.",
      "parentUuid": "8a0cf02a_16151f41",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f059b14_170b81b2",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T23:21:59Z",
      "side": 1,
      "message": "The Watchdog object does be inherent WatchdogBase anymore, so it doesn\u0027t have it.",
      "parentUuid": "fd97533a_53242dc5",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11ffdf1b_73a453e2",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-07T03:55:37Z",
      "side": 1,
      "message": "no, but there\u0027s a using Actions \u003d WatchdogBase::Actions in the Watchdog definition......  Seems odd we wouldn\u0027t use it.",
      "parentUuid": "0f059b14_170b81b2",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74b98537_48f2a50b",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-07T07:36:15Z",
      "side": 1,
      "message": "my understanding is that if we inherent WatchdogBase or `sdbusplus::xyz::openbmc_project::State::server::Watchdog`\n\nWe would need to use the following constructor\n```\n/** @brief Constructor to put object onto bus at a dbus path.\n         *  @param[in] bus - Bus to attach to.\n         *  @param[in] path - Path to attach at.\n         */\n        Watchdog(bus::bus\u0026 bus, const char* path);\n```\n\nwhich will force us to create the dbus object.\n\n----\n\nI couldn\u0027t use `using WatchdogBase::convertActionFromString` directly.\n\nI have set a static function to get access to it from Watchdog now. Maybe that will work better?",
      "parentUuid": "11ffdf1b_73a453e2",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ebafb70_d2173b45",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-07T21:56:30Z",
      "side": 1,
      "message": "Ah, I see now.  You\u0027re not using it for action.......  I\u0027m not loving how messy it is, but I guess that works.",
      "parentUuid": "74b98537_48f2a50b",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2845418_e3ee12f2",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-07T22:50:59Z",
      "side": 1,
      "message": "same. Maybe WatchdogBase::... might be better?\n\n----\n\nOn a side note, William has https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-watchdog/+/50187 to fix the leak issue. I haven\u0027t been able to test it yet.\n\nShould we still covert it to ASIO?",
      "parentUuid": "7ebafb70_d2173b45",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cad85fa7_a08ae391",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-01-07T22:53:27Z",
      "side": 1,
      "message": "Also a patch to systemd that \"fixes\" it too.\nhttps://github.com/systemd/systemd/issues/22046#issuecomment-1007616665\n\nAlthough I\u0027m not sure why their eventfd is getting desyncd from processing.",
      "parentUuid": "a2845418_e3ee12f2",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 38
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1dedd06_fafaf162",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-03T17:39:08Z",
      "side": 1,
      "message": "Aren\u0027t these also within the Watchdog Namespace?",
      "range": {
        "startLine": 154,
        "startChar": 24,
        "endLine": 154,
        "endChar": 36
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94a1e6f0_7989ab52",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 154,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T04:16:26Z",
      "side": 1,
      "message": "moved to Watchdog::Action",
      "parentUuid": "f1dedd06_fafaf162",
      "range": {
        "startLine": 154,
        "startChar": 24,
        "endLine": 154,
        "endChar": 36
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0bc2587_64073a1c",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 249,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-03T17:39:08Z",
      "side": 1,
      "message": "We likely don\u0027t want to be managing our own loop here.  We should be managing our timers within the io_context callbacks, and simply calling run().  run_one() is going to block in weird ways that you don\u0027t expect.",
      "range": {
        "startLine": 249,
        "startChar": 15,
        "endLine": 249,
        "endChar": 22
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6372c32a_57b07199",
        "filename": "src/mainapp.cpp",
        "patchSetId": 10
      },
      "lineNbr": 249,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-05T04:16:26Z",
      "side": 1,
      "message": "yeah, I moved the `continueAfterTimeout` logic to a timeout handler in Watchdog and will get triggered once the timer timeout. It will stop the io and stuff.",
      "parentUuid": "b0bc2587_64073a1c",
      "range": {
        "startLine": 249,
        "startChar": 15,
        "endLine": 249,
        "endChar": 22
      },
      "revId": "627113282980bf6697bc4decedb4d289fa9f1350",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}